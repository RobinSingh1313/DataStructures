package leetcode;

import java.util.ArrayList;

public class SecondLargest {
    public static int solve(ArrayList<Integer> A) {
        int largest = Integer.MIN_VALUE;
        int secondLargest = Integer.MIN_VALUE;
        for (int i = 0; i < A.size(); i++) {
            // this condition check for largest number
            if (A.get(i) > largest) {
                secondLargest = largest;
                largest = A.get(i);
            } else if (A.get(i) > secondLargest && A.get(i) < largest) {
                secondLargest = A.get(i);
            }
        }
        if(secondLargest==Integer.MIN_VALUE)
        {
            return -1;
        }
        return secondLargest;
    }

    public static void main(String[] args) {
        int[] arr={};

      ArrayList<Integer> arrayList=new ArrayList<>();
      for (int k:arr)
          arrayList.add(k);
        int ans=solve(arrayList);
        System.out.println(ans);
    }
}
